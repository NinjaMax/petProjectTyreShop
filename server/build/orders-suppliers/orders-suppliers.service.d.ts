import { CreateOrdersSupplierDto } from './dto/create-orders-supplier.dto';
import { GetOrdersSuppliersDto } from './dto/get-orders-supplier.dto';
import { UpdateOrdersSupplierDto } from './dto/update-orders-supplier.dto';
import { OrdersSupplier } from './entities/orders-supplier.model';
import { OrdersSupStorageService } from './orders-sup-storage.service';
import { ContractService } from '../contract/contract.service';
import { OrdersStorageService } from '../orders/orders-storage.service';
import { OrdersService } from '../orders/orders.service';
import { StockBatteriesService } from '../stock/stock-batteries.service';
import { StockOilsService } from '../stock/stock-oils.service';
import { StockTyresService } from '../stock/stock-tyres.service';
import { StockWheelsService } from '../stock/stock-wheels.service';
export declare class OrdersSuppliersService {
    private ordersSupRepository;
    private ordersService;
    private ordersSupStorageService;
    private ordersStorageService;
    private stockTyresService;
    private stockBatteriesService;
    private stockOilsService;
    private stockWheelsService;
    private contractService;
    constructor(ordersSupRepository: typeof OrdersSupplier, ordersService: OrdersService, ordersSupStorageService: OrdersSupStorageService, ordersStorageService: OrdersStorageService, stockTyresService: StockTyresService, stockBatteriesService: StockBatteriesService, stockOilsService: StockOilsService, stockWheelsService: StockWheelsService, contractService: ContractService);
    createOrderSup(createOrdersSupplierDto: CreateOrdersSupplierDto): Promise<OrdersSupplier | OrdersSupplier[]>;
    addGoodsToOrderSup(createOrdersSupplierDto: CreateOrdersSupplierDto): Promise<OrdersSupplier | OrdersSupplier[]>;
    addGoodsToStock(createOrdersSupplierDto: CreateOrdersSupplierDto): Promise<import("../stock/entities/stock-tyres.model").StockTyres | import("../stock/entities/stock-wheels.model").StockWheels | import("../stock/entities/stock-batteries.model").StockBatteries | import("../stock/entities/stock-oils.model").StockOils>;
    findAllOrdersSup(): Promise<OrdersSupplier[]>;
    findOrderSupById(getOrdersSupDto: GetOrdersSuppliersDto): Promise<OrdersSupplier>;
    update(id: number, updateOrdersSupplierDto: UpdateOrdersSupplierDto): string;
    removeOrderSup(getOrdersSupDto: GetOrdersSuppliersDto): Promise<number>;
}
